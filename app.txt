// Acesta este structura completă a proiectului pentru magazinul online bazată pe cerințele tale.

// STRUCTURA DIRECTOARELOR:
// - app/
//   - Controllers/
//     - UserController.php
//     - ProductController.php
//     - OrderController.php
//   - Models/
//     - User.php
//     - Product.php
//     - Category.php
//     - Order.php
//     - OrderItem.php
// - config/
//   - database.php
// - public/
//   - index.php
// - routes/
//   - web.php
// - views/
//   - auth/
//     - login.view.php
//     - register.view.php
//     - reset_password.view.php
//   - products/
//     - index.view.php
//     - show.view.php
//   - cart/
//     - cart.view.php
//   - orders/
//     - index.view.php
//   - nav.view.php

// === Config/database.php ===
<?php
use Illuminate\Database\Capsule\Manager as Capsule;

$capsule = new Capsule();
$capsule->addConnection([
    'driver'    => 'mysql',
    'host'      => 'localhost',
    'database'  => 'online_store',
    'username'  => 'root',
    'password'  => '',
    'charset'   => 'utf8',
    'collation' => 'utf8_unicode_ci',
    'prefix'    => '',
]);

$capsule->setAsGlobal();
$capsule->bootEloquent();
?>

// === app/Models/User.php ===
<?php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class User extends Model
{
    protected $table = 'users';
    protected $fillable = ['first_name', 'last_name', 'email', 'password'];
}
?>

// === app/Models/Product.php ===
<?php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Product extends Model
{
    protected $table = 'products';
    protected $fillable = ['name', 'description', 'price', 'stock', 'category_id', 'image'];
}
?>

// === app/Models/Category.php ===
<?php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Category extends Model
{
    protected $table = 'categories';
    protected $fillable = ['name'];
}
?>

// === app/Models/Order.php ===
<?php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Order extends Model
{
    protected $table = 'orders';
    protected $fillable = ['user_id', 'status', 'total_price'];
}
?>

// === app/Models/OrderItem.php ===
<?php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class OrderItem extends Model
{
    protected $table = 'order_items';
    protected $fillable = ['order_id', 'product_id', 'quantity'];
}
?>

// === public/index.php ===
<?php
use Slim\Factory\AppFactory;
use Slim\Middleware\MethodOverrideMiddleware;

require_once __DIR__ . '/../vendor/autoload.php';

$app = AppFactory::create();
$app->addRoutingMiddleware();
$app->add(new MethodOverrideMiddleware());

require_once __DIR__ . '/../config/database.php';
require_once __DIR__ . '/../routes/web.php';

$app->run();
?>

// === routes/web.php ===
<?php
use App\Controllers\UserController;
use App\Controllers\ProductController;
use App\Controllers\OrderController;

$app->get('/products', [ProductController::class, 'index']);
$app->get('/product/{id}', [ProductController::class, 'show']);
$app->post('/cart/add', [ProductController::class, 'addToCart']);
$app->get('/cart', [OrderController::class, 'viewCart']);
$app->post('/order', [OrderController::class, 'placeOrder']);
$app->get('/orders', [OrderController::class, 'index']);

$app->get('/register', [UserController::class, 'registerForm']);
$app->post('/register', [UserController::class, 'register']);
$app->get('/login', [UserController::class, 'loginForm']);
$app->post('/login', [UserController::class, 'login']);
$app->get('/logout', [UserController::class, 'logout']);
?>

// === app/Controllers/ProductController.php ===
<?php
namespace App\Controllers;

use Psr\Http\Message\ResponseInterface as Response;
use Psr\Http\Message\ServerRequestInterface as Request;
use App\Models\Product;

class ProductController
{
    public function index(Request $request, Response $response)
    {
        $products = Product::all();
        ob_start();
        require '../views/products/index.view.php';
        $html = ob_get_clean();
        $response->getBody()->write($html);
        return $response;
    }

    public function show(Request $request, Response $response, $args)
    {
        $product = Product::find($args['id']);
        ob_start();
        require '../views/products/show.view.php';
        $html = ob_get_clean();
        $response->getBody()->write($html);
        return $response;
    }

    public function addToCart(Request $request, Response $response)
    {
        $data = $request->getParsedBody();
        // Logic for adding product to cart
        return $response->withHeader('Location', '/cart')->withStatus(302);
    }
}
?>

// === views/products/index.view.php ===
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Products</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
</head>
<body>
    <?php include '../views/nav.view.php'; ?>
    <div class="container">
        <h1>Products</h1>
        <div class="row">
            <?php foreach ($products as $product): ?>
                <div class="col-md-4">
                    <div class="card">
                        <img src="<?= $product->image ?>" class="card-img-top" alt="<?= $product->name ?>">
                        <div class="card-body">
                            <h5 class="card-title"> <?= $product->name ?> </h5>
                            <p class="card-text"> <?= $product->description ?> </p>
                            <p class="card-text">$<?= number_format($product->price, 2) ?></p>
                            <a href="/product/<?= $product->id ?>" class="btn btn-primary">View</a>
                        </div>
                    </div>
                </div>
            <?php endforeach; ?>
        </div>
    </div>
</body>
</html>

// Codul complet pentru alte fișiere va urma aceeași structură. Mă anunți dacă ai nevoie de extensii specifice!
